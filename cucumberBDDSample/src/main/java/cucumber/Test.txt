// Validate attributes
Set<String> sortedExpected = new TreeSet<>(String.CASE_INSENSITIVE_ORDER, expectedAttributes);
Set<String> sortedActual = new TreeSet<>(String.CASE_INSENSITIVE_ORDER, actualAttributes);
if (sortedExpected.equals(sortedActual) && actualAttributes != null) {
    System.out.println("✔ API response attributes are valid!");
    this.logger.info("API response attributes are valid!");
    expectedAttributes.clear();
    actualAttributes.clear();
} else {
    System.out.println("✘ API response attributes do not match expected attributes.");
    System.out.println("Expected: " + sortedExpected);
    System.out.println("Actual: " + sortedActual);
    Set<String> missing = new HashSet<>(sortedExpected);
    missing.removeAll(sortedActual);
    Set<String> extra = new HashSet<>(sortedActual);
    extra.removeAll(sortedExpected);
    if (!missing.isEmpty()) {
        System.out.println("✘ Missing: " + missing);
        this.logger.info("Missing: " + missing);
    }
    if (!extra.isEmpty()) {
        System.out.println("✘ Extra: " + extra);
        this.logger.info("Extra: " + extra);
    }
    missing = null;
    extra = null;
    expectedAttributes.clear();
    actualAttributes.clear();
    org.junit.Assert.assertTrue(condition: false);
}
